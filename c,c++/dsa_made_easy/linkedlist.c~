#include<stdio.h>

typedef struct listNode{int data; struct listNode* next;}listNode;

int listLength(listNode* head);
void deleteList(listNode **head);
void insertInLinkedList(listNode **head, int data, int position);
void deleteInLinkedList(listNode **head, int postion);
void deleteList(listNode **head);

int listLength(listNode* head){
	int count=0;
	while(head!=NULL){
		head=head->next;
		count++;
	}
	return count;
}
void insertInLinkedList(listNode **head, int data, int position){
	listNode* t=(listNode*)malloc(sizeof(listNode));
	t->data=data;
	if(position==1){
		t->next=*head;
		*head=t;
		return;
		}
	listNode *p=*head; 	
	while(position>2){
		position--;
		if(p==NULL){
			printf("not possible to insert at position %d because no. of elements are less",position);
			return;
		}
		p=p->next;
	}
	t->next=p->next;
	p->next=t;	
}
void deleteInLinkedList(listNode **head, int postion){
	if(*head==NULL) return;
	listNode *p=*head;
	if(position==1){
		*head=p->next;
		free(p);
	}
	while(position>2){
		if(p==NULL){
			printf("not possible to delete at position %d because no. of elements are less",position);
			return;
		}
		p=p->next;
		position--;
	}
	listNode* del=p->next;
	p->next=del->next;
	free(del);
}
void deleteList(listNode **head){
	listNode *p,*q;
	p=*head;
	while(p!=NULL){
		q=p;
		p=p->next;
		free(q);
	}
	*head=NULL;
}
